<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http auto-config="true" use-expressions="true" access-denied-page="/denied">
        <intercept-url pattern="/signIn" access="permitAll"/>
        <intercept-url pattern="/signUp" access="permitAll"/>
        <intercept-url pattern="/switch" access="hasRole('ROLE_USER') OR hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/getUserHome" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/editAllUsers" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/deleteUser" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/getAddUserPage" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/addUser" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/editUser" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/saveUser" access="hasRole('ROLE_ADMIN')"/>

        <form-login
                login-page="/signIn"
                authentication-failure-url="/signIn?error=true"
                default-target-url="/switch"/>
        <logout
                invalidate-session="true"
                logout-success-url="/signIn"
                logout-url="/logout"/>

        <custom-filter ref="captchaCaptureFilter" before="FORM_LOGIN_FILTER"/>
        <custom-filter ref="captchaVerifierFilter" after="FORM_LOGIN_FILTER"/>
    </http>

    <!-- For capturing CAPTCHA fields -->
    <beans:bean id="captchaCaptureFilter" class="com.nixsolutions.ivashyn.web.filter.CaptchaCaptureFilter"/>

    <!-- For verifying CAPTCHA fields -->
    <!-- Private key is assigned by the reCATPCHA service -->
    <beans:bean id="captchaVerifierFilter" class="com.nixsolutions.ivashyn.web.filter.CaptchaVerifierFilter">
        <beans:property name="useProxy" value="false"/>
        <beans:property name="proxyPort" value=""/>
        <beans:property name="proxyHost" value=""/>
        <beans:property name="privateKey" value="${private.key}"/>
        <beans:property name="failureUrl" value="/signIn?error=true"/>
    </beans:bean>

    <!--<authentication-manager>-->
        <!--<authentication-provider user-service-ref="customUserDetailsService"/>-->
    <!--</authentication-manager>-->

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="daoAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
        <beans:property name="userDetailsService" ref="customUserDetailsService"/>
    </beans:bean>

    <!--<authentication-manager>-->
        <!--<authentication-provider user-service-ref="userDetailsService"/>-->
    <!--</authentication-manager>-->

    <!--<user-service id="userDetailsService">-->
        <!--<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />-->
        <!--<user name="user" password="user" authorities="ROLE_USER" />-->
    <!--</user-service>-->

    <beans:bean id="customUserDetailsService" class="com.nixsolutions.ivashyn.util.CustomUserDetailsService"/>

</beans:beans>
