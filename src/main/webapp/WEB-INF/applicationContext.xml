<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.myspring.ivashyn"/>
    <mvc:annotation-driven/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="signUpController" class="com.myspring.ivashyn.web.SignUpController">
        <property name="privateKey" value="${private.key}"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.myspring.ivashyn.db"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <context:property-placeholder
            location="classpath:db.properties,
            classpath:recaptcha.properties,
            classpath:mail.properties"/>

   <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driver.class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
    </bean>

    <!--    MongoDB -->

    <bean id="mongo" class="com.mongodb.Mongo" destroy-method="close">
        <constructor-arg value="localhost"/>
        <constructor-arg value="27017"/>
    </bean>

    <bean id="morphia" class="com.google.code.morphia.Morphia"/>

    <bean id="datastore" factory-bean="morphia" factory-method="createDatastore">
        <constructor-arg ref="mongo"/>
        <constructor-arg value="my_spring"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${SMTP_HOST}" />
        <property name="port" value="${SMTP_PORT}" />
        <property name="username" value="${USER_NAME}" />
        <property name="password" value="${PASSWORD}" />

        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>

    <!--<bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:recaptcha.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
        <!--<property name="singleton" value="true"/>-->
        <!--<property name="properties">-->
            <!--<props>-->
                <!--<prop key="public.key">${public.key}</prop>-->
                <!--<prop key="private.key">${private.key}</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->
</beans>
